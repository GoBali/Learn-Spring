version: '3.8'

services:
  database:
    image: postgres:15
    container_name: springboot-db
    restart: "always"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: learn-spring
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d learn-spring" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - spring-network

  tracer:
    image: openzipkin/zipkin:latest
    container_name: zipkin-tracer
    ports:
      - "9411:9411"
    networks:
      - spring-network
    environment:
      - STORAGE_TYPE=mem
    volumes:
      - zipkin_data:/data
    healthcheck:
      test: [ "CMD", "wget", "-q", "--tries=1", "--spider", "http://localhost:9411/health" ]
      interval: 10s
      timeout: 5s
      retries: 3

  proxy:
    image: envoyproxy/envoy:v1.27-latest
    container_name: envoy-proxy
    volumes:
      - ../envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ../envoy/certs:/etc/envoy/certs
    ports:
      - "9901:9901" # Envoy Admin Port
      - "9443:8443" # Envoy Proxy 접속 포트
      - "8088:8088" # HTTP -> HTTPS
    networks:
      - spring-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - prometheus_data:/prometheus
      - ../prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - spring-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - spring-network
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

volumes:
  postgres_data:
  zipkin_data:
  prometheus_data:
  grafana_data:

networks:
  spring-network:
    driver: bridge